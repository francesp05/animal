import pygame, sys
from pygame.locals import *

#initalizing pygame
pygame.init()

#setting display
screen = pygame.display.set_mode((400,400 ))

pygame.display.set_caption("Hello World")

while True:
    # screen.fill((255,255,255))
    #get all input events
    for event in pygame.event.get():
        #if quit is initiated, close the program
        if event.type == QUIT:
            pygame.quit()
            sys.exit()

        #keyboard input
        if event.type == pygame.KEYDOWN:
            screen.fill((255,255,255))
            if event.key == pygame.K_LEFT:
                print("left key pressed")
                pygame.draw.rect(screen,(113,152,209),(200,150,150,50))
            if event.key == pygame.K_RIGHT:
                # screen.fill((255,255,255))
                pygame.draw.rect(screen,(113, 209, 121),(200,150,150,50))
                print("right key pressed")


    #more cool stuff

#update screen to show all cool stuff
    pygame.display.update()

#----------------------------------------------------------------------

'''import pygame
import time
import random

# Initialize Pygame
pygame.init()

# Set up the display
WIDTH, HEIGHT = 600, 600
win = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Snake Game")

# Define colors
BLACK = (0, 0, 0)
GREEN = (0, 255, 0)
RED = (255, 0, 0)

# Snake initial position and size
snake_block = 20
snake_speed = 15

# Fonts
font_style = pygame.font.SysFont(None, 50)
score_font = pygame.font.SysFont(None, 35)

# Function to display score
def our_snake(snake_block, snake_list):
    for x in snake_list:
        pygame.draw.rect(win, GREEN, [x[0], x[1], snake_block, snake_block])

# Function to display message
def message(msg, color):
    mesg = font_style.render(msg, True, color)
    win.blit(mesg, [WIDTH / 6, HEIGHT / 3])

# Game loop
def game_loop():
    game_over = False
    game_close = False

    # Snake initial position
    x1 = WIDTH / 2
    y1 = HEIGHT / 2

    # Snake initial movement
    x1_change = 0
    y1_change = 0

    # Snake body
    snake_List = []
    Length_of_snake = 1

    # Food position
    foodx = round(random.randrange(0, WIDTH - snake_block) / 20.0) * 20.0
    foody = round(random.randrange(0, HEIGHT - snake_block) / 20.0) * 20.0

    while not game_over:

        while game_close:
            win.fill(BLACK)
            message("You lost! Press Q-Quit or C-Play Again", RED)
            pygame.display.update()

            # Check for game over events
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    game_over = True
                    game_close = False
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_q:
                        game_over = True
                        game_close = False
                    if event.key == pygame.K_c:
                        game_loop()

        # Check for game events
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                game_over = True
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    x1_change = -snake_block
                    y1_change = 0
                elif event.key == pygame.K_RIGHT:
                    x1_change = snake_block
                    y1_change = 0
                elif event.key == pygame.K_UP:
                    y1_change = -snake_block
                    x1_change = 0
                elif event.key == pygame.K_DOWN:
                    y1_change = snake_block
                    x1_change = 0

        # Check for boundaries
        if x1 >= WIDTH or x1 < 0 or y1 >= HEIGHT or y1 < 0:
            game_close = True
        x1 += x1_change
        y1 += y1_change
        win.fill(BLACK)
        pygame.draw.rect(win, RED, [foodx, foody, snake_block, snake_block])
        snake_Head = []
        snake_Head.append(x1)
        snake_Head.append(y1)
        snake_List.append(snake_Head)
        if len(snake_List) > Length_of_snake:
            del snake_List[0]

        # Check for snake self-collision
        for x in snake_List[:-1]:
            if x == snake_Head:
                game_close = True

        our_snake(snake_block, snake_List)
        pygame.display.update()

        # Check if snake eats the food
        if x1 == foodx and y1 == foody:
            foodx = round(random.randrange(0, WIDTH - snake_block) / 20.0) * 20.0
            foody = round(random.randrange(0, HEIGHT - snake_block) / 20.0) * 20.0
            Length_of_snake += 1

        pygame.display.update()

        # Refresh rate of the game
        pygame.time.Clock().tick(snake_speed)

    pygame.quit()


# Run the game loop
game_loop()'''